@model Home.Models.Dto.ChatDto
@{ Layout = null; }

<input type="hidden" id="nomeUsuario" value="@Model.Usuario.Nome" />
<div class="page-quick-sidebar-wrapper">
    <div class="page-quick-sidebar">
        <div class="nav-justified">
            <ul class="nav nav-tabs nav-justified">
                <li class="active">
                    <a href="#quick_sidebar_tab_1" data-toggle="tab">Chat</a>
                </li>
            </ul>
            <div class="tab-content">
                <div class="tab-pane active page-quick-sidebar-chat" id="quick_sidebar_tab_1">
                    <div class="page-quick-sidebar-chat-users" data-rail-color="#ddd" data-wrapper-class="page-quick-sidebar-list">
                        <ul class="media-list list-items">
                            @*<li class="media" data-user-id="2" onclick="openChat(this)">
                                    <div class="media-status">
                                        <span class="badge badge-success">2</span>
                                    </div>
                                    <img class="media-object" src="~/assets/img/placeholder.jpg" alt="...">
                                    <div class="media-body">
                                        <h4 class="media-heading">Teste</h4>
                                        <div class="media-heading-sub">Ciencia da computacao</div>
                                    </div>
                                </li>*@
                        </ul>
                    </div>
                    <div class="page-quick-sidebar-item">
                        <div class="page-quick-sidebar-chat-user" data-user-id style="display: none">
                            <div class="page-quick-sidebar-nav">
                                <a href="javascript:;" class="page-quick-sidebar-back-to-list" onclick="hideChat(this)"><i class="icon-arrow-left"></i>Voltar</a>
                            </div>
                            <div class="page-quick-sidebar-chat-user-messages">
                                @*<div class="post out">
                                        <img class="avatar" alt="" src="~/assets/img/placeholder.jpg" />
                                        <div class="message">
                                            <span class="arrow"></span>
                                            <a href="javascript:;" class="name">Bob Nilson</a>
                                            <span class="datetime">20:15</span>
                                            <span class="body">
                                                TESTE DO BRUNO BARBOSA?
                                            </span>
                                        </div>
                                    </div>
                                    <div class="post in">
                                        <img class="avatar" alt="" src="~/assets/img/placeholder.jpg" />
                                        <div class="message">
                                            <span class="arrow"></span>
                                            <a href="javascript:;" class="name">Ella Wong</a>
                                            <span class="datetime">20:15</span>
                                            <span class="body">
                                                SIM, MUITO BOM ESSE CARA!!
                                            </span>
                                        </div>
                                    </div>*@
                            </div>
                            <div class="page-quick-sidebar-chat-user-form">
                                <div class="input-group">
                                    <input type="text" class="form-control" placeholder="Digite uma mensagem">
                                    <div class="input-group-btn">
                                        <button type="button" class="btn blue"><i class="icon-check"></i></button>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<div id="divContainerMessage">
    <div class="page-quick-sidebar-chat-user" data-user-id style="display: none">
        <div class="page-quick-sidebar-nav">
            <a href="javascript:;" class="page-quick-sidebar-back-to-list" onclick="hideChat(this)"><i class="icon-arrow-left"></i>Voltar</a>
        </div>
        <div class="page-quick-sidebar-chat-user-messages"></div>
        <div class="page-quick-sidebar-chat-user-form">
            <div class="input-group">
                <input type="text" class="form-control" placeholder="Digite uma mensagem">
                <div class="input-group-btn">
                    <button type="button" class="btn blue"><i class="icon-check"></i></button>
                </div>
            </div>
        </div>
    </div>
</div>

@Scripts.Render("~/assets/js/SignalR")
<script src="/signalr/hubs" type="text/javascript"></script>

<script>

    var usuarioLogado = {
        Id: '@Model.Usuario.Id',
        Nome: '@Model.Usuario.Nome',
        Curso: {
            Id: '@Model.Usuario.Curso.Id',
            Nome: '@Model.Usuario.Curso.Nome'
        }
    }

    var wrapper = $('.page-quick-sidebar-wrapper');
    var wrapperChat = wrapper.find('.page-quick-sidebar-chat');

    var initChatSlimScroll = function () {
        var chatUsers = wrapper.find('.page-quick-sidebar-chat-users');
        var chatUsersHeight = wrapper.height() - wrapper.find('.nav-justified > .nav-tabs').outerHeight();

        // chat user list
        Metronic.destroySlimScroll(chatUsers);
        chatUsers.attr("data-height", chatUsersHeight);
        Metronic.initSlimScroll(chatUsers);

        var chatMessages = wrapperChat.find('.page-quick-sidebar-chat-user-messages');
        var chatMessagesHeight = chatUsersHeight -
            wrapperChat.find('.page-quick-sidebar-chat-user-form').outerHeight() -
            wrapperChat.find('.page-quick-sidebar-nav').outerHeight();

        // user chat messages
        Metronic.destroySlimScroll(chatMessages);
        chatMessages.attr("data-height", chatMessagesHeight);
        Metronic.initSlimScroll(chatMessages);
    };

    //Metronic.addResizeHandler(initChatSlimScroll); // reinitialize on window resize

    function openChat(obj) {
        $("[data-user-id=" + $(obj).attr("data-user-id") + "]").show();
        wrapperChat.addClass("page-quick-sidebar-content-item-shown");
    };

    function hideChat(obj) {
        wrapperChat.removeClass("page-quick-sidebar-content-item-shown");
        $(".page-quick-sidebar-chat-user[data-user-id=" + $(obj).closest(".page-quick-sidebar-chat-user").attr("data-user-id") + "]").hide();
    };

    // Definindo template para adicionar novo usuário ao chat
    var montaChatUsuario = (usuario) => {
        var newUser = '';
        newUser += '<li class="media" data-user-id=' + usuario.Id + ' onclick="openChat(this)">';
        newUser += '<div class="media-status">';
        newUser += '<span class="badge badge-success">' + 1 + '</span>';
        newUser += '</div>';
        newUser += '<img class="media-object" src="/assets/img/placeholder.jpg" alt="...">';
        newUser += '<div class="media-body">';
        newUser += '<h4 class="media-heading">' + usuario.Nome + '</h4>';
        newUser += '<div class="media-heading-sub">' + usuario.Curso.Nome + '</div>';
        newUser += '</div>';
        newUser += '</li>';

        $(".page-quick-sidebar-item").append(montaChatMensagens(usuario));
        //initChatSlimScroll();
        return newUser;
    }

    // Template adicionado para cada usuário criado no chat referente as mensagens
    var montaChatMensagens = (usuario) => {
        return $("#divContainerMessage .page-quick-sidebar-chat-user").clone().attr("data-user-id", usuario.Id);
    }

    // Declarando um proxy de referencia ao Hub
    var chatHub = $.connection.chat;

    // Criando a função que será chamada pelo Hub para distribuir as mensagens aos clientes.
    // Por convenção as chamadas aos métodos são feitas em "camelCase"
    chatHub.client.transmitirMensagem = function (usuario, mensagem) {
        var isUsuarioLogado = usuarioLogado.Id == usuario.Id;

        // Area do chat
        var chatContainer = wrapperChat.find(".page-quick-sidebar-chat-user-messages");
        var input = wrapperChat.find('.page-quick-sidebar-chat-user-form:visible .form-control');

        //var text = input.val();
        //if (text.length === 0) {
        //    return;
        //}

        var preparePost = function (dir, time, name, avatar, message) {
            var tpl = '';
            tpl += '<div class="post ' + dir + '">';
            tpl += '<img class="avatar" alt="" src="' + /*Layout.getLayoutImgPath()*/"/assets/img/placeholder.jpg" /*+ avatar + '.jpg*/+'"/>';
            tpl += '<div class="message">';
            tpl += '<span class="arrow"></span>';
            tpl += '<a href="#" class="name">' + name + '</a>&nbsp;';
            tpl += '<span class="datetime">' + time + '</span>';
            tpl += '<span class="body">';
            tpl += message;
            tpl += '</span>';
            tpl += '</div>';
            tpl += '</div>';

            return tpl;
        };

        // Preparando postagem
        var time = new Date();
        var message = preparePost(isUsuarioLogado ? 'out' : 'in', (time.getHours() + ':' + time.getMinutes()), usuario.Nome, 'avatar3', mensagem);
        message = $(message);
        chatContainer.append(message);

        var getLastPostPos = function () {
            var height = 0;
            chatContainer.find(".post")
                .each(function () {
                    height = height + $(this).outerHeight();
                });

            return height;
        };

        chatContainer.slimScroll({
            scrollTo: getLastPostPos()
        });

        if (isUsuarioLogado)
            input.val("");
    };

    chatHub.client.atualizaNovoUsuarioOnline = function (usuario) {
        if (usuario.Id != usuarioLogado.Id)
            $(".page-quick-sidebar-chat-users > ul.media-list.list-items").append(montaChatUsuario(usuario));
    }

    chatHub.client.montaListaLogados = function (usuarios) {
        usuarios.forEach((usuario) => {
            chatHub.client.atualizaNovoUsuarioOnline(usuario);
        });
    }

    chatHub.client.removerUsuarioChat = function (usuario) {
        $("[data-user-id=" + usuario.Id + "]").remove();
    }

    // Iniciando a conexão com o Hub
    $.connection.hub.start(() => {

        chatHub.server.conectar(usuarioLogado);

        $(document).on("click", '.page-quick-sidebar-chat-user-form .btn', () => {
            chatHub.server.enviarMensagem(
                usuarioLogado,
                $(".page-quick-sidebar-chat-user:visible").attr("data-user-id"),
                $('.page-quick-sidebar-chat-user-form:visible .form-control').val());
        });

        $(document).on("keypress", '.page-quick-sidebar-chat-user-form .form-control', (e) => {
            if (e.which == 13) {
                chatHub.server.enviarMensagem(usuarioLogado,
                $(".page-quick-sidebar-chat-user:visible").attr("data-user-id"),
                $('.page-quick-sidebar-chat-user-form:visible .form-control').val());
                return false;
            }
        });
    });

</script>